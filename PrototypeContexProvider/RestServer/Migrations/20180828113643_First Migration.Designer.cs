// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestServer.Models;

namespace RestServer.Migrations
{
    [DbContext(typeof(DataSharingPolciyContext))]
    [Migration("20180828113643_First Migration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview1-35029");

            modelBuilder.Entity("PrototypeContexProvider.src.CompositeContex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("CompositeContex");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.CompositeContexJson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("CompositeContexJson");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.CompositeContexJson+Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CompositeContexJsonId");

                    b.Property<long?>("ContexId");

                    b.Property<int>("Glue");

                    b.Property<bool>("Not");

                    b.HasKey("Id");

                    b.HasIndex("CompositeContexJsonId");

                    b.HasIndex("ContexId");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.Contex", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Interval");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Contex");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.DataConsumer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("DataConsumer");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.DataSharingPolciy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<long?>("CompositeContexId");

                    b.Property<long?>("DataConsumerId");

                    b.Property<string>("Decision");

                    b.Property<long?>("JsonCompositeContexId");

                    b.Property<long?>("PrivacyOblgationsId");

                    b.Property<int>("Proity");

                    b.Property<long?>("ResharingObligationsId");

                    b.HasKey("Id");

                    b.HasIndex("CompositeContexId");

                    b.HasIndex("DataConsumerId");

                    b.HasIndex("JsonCompositeContexId");

                    b.HasIndex("PrivacyOblgationsId");

                    b.HasIndex("ResharingObligationsId");

                    b.ToTable("Polcies");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.PrivacyOblgations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Accounting");

                    b.Property<string>("Anonymisation");

                    b.Property<string>("Granularity");

                    b.Property<string>("Notifaction");

                    b.Property<string>("Purpose");

                    b.HasKey("Id");

                    b.ToTable("PrivacyOblgations");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.ResharingObligations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanShare");

                    b.Property<int>("Cardinality");

                    b.Property<int>("Recurring");

                    b.HasKey("Id");

                    b.ToTable("ResharingObligations");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.CompositeContexJson+Entry", b =>
                {
                    b.HasOne("PrototypeContexProvider.src.CompositeContexJson")
                        .WithMany("Conteiexs")
                        .HasForeignKey("CompositeContexJsonId");

                    b.HasOne("PrototypeContexProvider.src.Contex", "Contex")
                        .WithMany()
                        .HasForeignKey("ContexId");
                });

            modelBuilder.Entity("PrototypeContexProvider.src.DataSharingPolciy", b =>
                {
                    b.HasOne("PrototypeContexProvider.src.CompositeContex", "CompositeContex")
                        .WithMany()
                        .HasForeignKey("CompositeContexId");

                    b.HasOne("PrototypeContexProvider.src.DataConsumer", "DataConsumer")
                        .WithMany()
                        .HasForeignKey("DataConsumerId");

                    b.HasOne("PrototypeContexProvider.src.CompositeContexJson", "JsonCompositeContex")
                        .WithMany()
                        .HasForeignKey("JsonCompositeContexId");

                    b.HasOne("PrototypeContexProvider.src.PrivacyOblgations", "PrivacyOblgations")
                        .WithMany()
                        .HasForeignKey("PrivacyOblgationsId");

                    b.HasOne("PrototypeContexProvider.src.ResharingObligations", "ResharingObligations")
                        .WithMany()
                        .HasForeignKey("ResharingObligationsId");
                });
#pragma warning restore 612, 618
        }
    }
}
